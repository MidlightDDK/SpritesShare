Create GitHub repo
	SpritesShare API - Golang Google Cloud Functions App
		GET / - Welcome page
		GET /sprites?query - Get All Sprites
		POST /sprites - Add a Sprites
		GET /sprites/:id - Get a Sprites
		POST /sprites/:id - Rate a Sprites

	Sprites struct
		UTILITY
			id - string
			dateCreated - string
		VALUES
			name - string
			description - string
			dimensionX - uint
			dimensionY - uint
			tags - string[]
			ratings - int[string]

	SpritesShare Client - Unity App
		Welcome
			TextMeshPro - "Sprites Share"
			Button - "Browse" -> Go to Browse screen
			Button - "Import" -> Go to Import screen
		Import
			Image - Sprites preview
			Button - "Import" -> Open import window
			TextField - "Name"
			TextField - "Description"
			TextField - "Tags" - [azAZ09]
			Button - "Share" -> Send the Sprites online
		Browse
			TextField - "Tags" - [azAZ09]
			Button - "Search" -> Browse Sprites
			SPRITEBOX GridView Scroll
				Image - Preview
				TextField - Name
		View
			Image - Sprites preview
			TextField - "Name"
			TextField - "Description"
			TextField - "Tags" - [azAZ09]
			TextField - "Ratings"
			TextField - "Your Rating"
			Image - Ratings Stars
			Button - "Rate" -> Rate the Sprites


Roadmap
	*Create GitHub repos
	API
		*Set up Google Cloud Functions project
		*MAKE - GET /
		*MAKE - error route
		*MAKE - GET /sprites/:id
		*MAKE - GET /sprites
		*MAKE - POST /sprites
		*MAKE - POST /sprites/:id
		*Validate tags string [azAZ01]
		*Pagination?
		*MAKE - GET /sprites?query

		tags array-contains-any (tag = tag1,tag2 -> split)
		author =
		name =

		either
		{
			dimensionXMin >=
			dimensionXMax <=
		}
		{
			dimensionYMin >=
			dimensionYMax <=
		}
		{
			dateCreatedMin >=
			dateCreatedMax <=
		}

		Indexes?
		Cannot combine inequalities
		Date format : 2006-02-01

		Firestore compare dates
		firebase.firestore.Timestamp.fromDate(new Date("1900-01-01"));
		Firebase.Firestore.Timestamp.FromDateTime
		Install Firestore SDK locally?

		Query by rating

	Unity App
		*Prepare all API querys
		*Upload 10 sprites
		*MAKE - Welcome
		*MAKE - Import
			blackAndWhite,16x16,mob
		*MAKE - View
		*MAKE - Browse
		*Ads Portal?
		*Sound Button clicks
		*Background Music
		*Upload Sprites
		*Prepare a tutorial for how to use
		*Host on itch
	Remaining
		WebGL Allow File Upload
		WebGL Allow CORS
			"Access-Control-Allow-Credentials": "true",
			"Access-Control-Allow-Headers": "Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time",
			"Access-Control-Allow-Methods": "GET, POST, OPTIONS",
			"Access-Control-Allow-Origin": "*",
		Database switch to Postgres
		Itch.io Setup page
		Google Cloud Make the Labs
		CodeChef prepare for the contest